Given N activities with their start and finish day given in array start[ ] and end[ ]. 
Select the maximum number of activities that can be performed by a single person, assuming that a person can only work on a single activity at a given day.
Note : Duration of the activity includes both starting and ending day.


Example 1:

Input:
N = 2
start[] = {2, 1}
end[] = {2, 2}
Output: 
1
Explanation:
A person can perform only one of the
given activities.

//code.............

class Solution
{
    //Function to find the maximum number of activities that can
    //be performed by a single person.
    public static int activitySelection(int start[], int end[], int n)
    {
         int maxAct=0;
		maxAct=1;
		
		int lastEnd = end[0];
		
		for(int i=0;i<end.length;i++){
		  if(start[i]>lastEnd){
		      maxAct++;
			  lastEnd=end[i];
		  }
		}
		int act[][] = new int[start.length][3];
		for(int i=0;i<start.length;i++){
		act[i][0]=i;
		act[i][1] = start[i];
		act[i][2] = end[i];
		}
		Arrays.sort(act,Comparator.comparingDouble(o->o[2]));//sort end[]
		maxAct=1;
		int last = act[0][2];
		
		for(int i=0;i<end.length;i++){
		  if(act[i][1]>last){
		      maxAct++;
			  last=act[i][2];
		  }
		}
		return maxAct;
    }
}
